"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[959],{9609:function(t,e,n){n.r(e),n.d(e,{assets:function(){return f},contentTitle:function(){return x},default:function(){return C},frontMatter:function(){return b},metadata:function(){return N},toc:function(){return h}});var a=n(7462),l=n(3366),o=n(7294),i=n(3905),r=n(2074),m=n(983),s=n(1736),p=n(1119),u="import React from 'react';\nimport {\n  AnnotationBoxPlotProps,\n  Plot,\n  Annotations,\n  Annotation,\n  SeriesPoint,\n} from 'react-plot';\nimport { ScatterSeries, Axis } from 'react-plot';\nimport { xBoxPlot, createRandomArray } from 'ml-spectra-processing';\n\nexport default function BoxPlotExample() {\n  // dynamically generate some normally distributed data about the arbritrary value of 300\n  const seed1 = 2359;\n  const seed2 = 787486;\n  const numPoints = 100;\n\n  const data = createRandomArray({\n    distribution: 'normal',\n    seed: seed1,\n    mean: 300,\n    standardDeviation: 100,\n    length: numPoints,\n  });\n\n  const jitter = createRandomArray({\n    distribution: 'normal',\n    seed: seed2,\n    mean: 0,\n    standardDeviation: 0.1,\n    length: numPoints,\n  });\n\n  var points: SeriesPoint[] = [];\n  data.forEach((value, i) => {\n    points.push({ x: jitter[i], y: value });\n  });\n\n  const boxPlotStats = xBoxPlot(data);\n\n  const props: AnnotationBoxPlotProps = {\n    max: boxPlotStats.max,\n    min: boxPlotStats.min,\n    q1: boxPlotStats.q1,\n    median: boxPlotStats.median,\n    q3: boxPlotStats.q3,\n    width: 1.0,\n    y: 0,\n    xAxis: 'y',\n    yAxis: 'x',\n    medianColor: 'orange',\n    medianStyle: { strokeWidth: 4 },\n    minMaxStyle: { strokeWidth: 2 },\n    minMaxColor: 'blue',\n  };\n\n  return (\n    <Plot width={300} height={300}>\n      <Annotations>\n        <Annotation.BoxPlot {...props} />\n      </Annotations>\n      <ScatterSeries\n        data={points}\n        markerStyle={{ opacity: 0.3, fill: 'green' }}\n      />\n      <Axis id=\"x\" position=\"bottom\" min={-2} max={2} />\n      <Axis id=\"y\" position=\"left\" min={0} max={600} />\n    </Plot>\n  );\n}\n",d=function(){var t=(0,m.v4)({distribution:"normal",seed:2359,mean:300,standardDeviation:100,length:100}),e=(0,m.v4)({distribution:"normal",seed:787486,mean:0,standardDeviation:.1,length:100}),n=[];t.forEach((function(t,a){n.push({x:e[a],y:t})}));var a=(0,m.uM)(t),l={max:a.max,min:a.min,q1:a.q1,median:a.median,q3:a.q3,width:1,y:0,xAxis:"y",yAxis:"x",medianColor:"orange",medianStyle:{strokeWidth:4},minMaxStyle:{strokeWidth:2},minMaxColor:"blue"};return o.createElement(r.XN,{width:300,height:300},o.createElement(r.uN,null,o.createElement(r.q6.BoxPlot,l)),o.createElement(r.nC,{data:n,markerStyle:{opacity:.3,fill:"green"}}),o.createElement(r.RD,{id:"x",position:"bottom",min:-2,max:2}),o.createElement(r.RD,{id:"y",position:"left",min:0,max:600}))};function k(t){var e=(0,o.useState)(!1),n=e[0],a=e[1];return o.createElement(o.Fragment,null,o.createElement("div",{className:"demo-example-wrapper"},o.createElement(d,null),o.createElement("div",{className:"demo-example-buttons"},o.createElement("button",{onClick:function(){return a((function(t){return!t}))},type:"button",style:{backgroundColor:n?"#dbeafe":void 0}},"Code"),t.noCodesandbox?null:o.createElement(p.Z,{name:"box-plot-example",source:u,dependencies:{react:"^17.0.2","react-plot":"^0.19.1","ml-spectra-processing":"^11.6.0"}},(function(){return o.createElement("button",{type:"submit"},"Open sandbox")})))),n&&o.createElement(s.Z,{className:"language-jsx"},u))}var c=["components"],b={},x="BoxPlot",N={unversionedId:"boxplot",id:"boxplot",title:"BoxPlot",description:"BoxPlot shows summary statistics of data in a graphical form. The graphic below shows",source:"@site/docs/080_boxplot.md",sourceDirName:".",slug:"/boxplot",permalink:"/boxplot",editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/080_boxplot.md",tags:[],version:"current",sidebarPosition:80,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Plot",permalink:"/plot"},next:{title:"Introduction",permalink:"/series/intro"}},f={},h=[{value:"Props",id:"props",level:2},{value:"Mandatory",id:"mandatory",level:3},{value:"Optional",id:"optional",level:3}],y={toc:h};function C(t){var e=t.components,n=(0,l.Z)(t,c);return(0,i.kt)("wrapper",(0,a.Z)({},y,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"boxplot"},"BoxPlot"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"BoxPlot")," shows summary statistics of data in a graphical form. The graphic below shows\na bloxplot superimposed on a scatter plot of the dataset."),(0,i.kt)(k,{mdxType:"BoxPlotDemo"}),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("h3",{id:"mandatory"},"Mandatory"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"min:")," Minumum value in the dataset",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalarValue")," ",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"max:")," Maximum value in the dataset",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalarValue")," ",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"q1:")," First Quartile of the dataset",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalarValue")," ",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"median:")," Median of the dataset",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalarValue")," ",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"q3:")," Third Quartile of the dataset",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalarValue")," ",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"width:")," Width of the boxplot",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalarValue")," ",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"y:")," y location of the boxplot ",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalarValue")," ",(0,i.kt)("br",null))),(0,i.kt)("h3",{id:"optional"},"Optional"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"xAxis?:")," The xAxis",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"x")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"yAxis?:")," The yAxis",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"y")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"medianColor?:")," Colour name of the median line",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"black")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"medianStyle?:")," CSS properties of the median line",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"CSSProperties"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"boxColor?:")," Colour name of the box",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"black")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"boxStyle?:")," CSS Properties of the box",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"CSSProperties"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"whiskerColor?:")," Colour name of the whisker lines",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"black")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"whiskerStyle?:")," CSS Properties of the whisker lines",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"CSSProperties"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"minMaxColor?:")," Colour name of the min/max lines",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"black")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"minMaxStyle?:")," CSS Properties of the min/max lines",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"CSSProperties"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"onMouseEnter?:")," Handler for MouseEnter events",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"MouseEventHandler<SVGGElement>"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"onMouseLeave?:")," Handler for MouseLeave events",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"MouseEventHandler<SVGGElement>"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}"))))}C.isMDXComponent=!0}}]);